name: Deploy app
on:
  repository_dispatch:
    types:
      - deploy-command

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.slash_command.args.named.ref }}

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Build
        run: npm run build

      - uses: actions/upload-artifact@v3
        name: Upload build artifact for ${{ github.event.client_payload.slash_command.args.named.ref }}
        with:
          name: ${{ github.event.client_payload.slash_command.args.named.ref }}
          path: ./build/

  deploy:
    runs-on: ubuntu-latest
    needs: validate
    environment: ${{ github.event.client_payload.slash_command.args.named.environment }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          path: ./build
          name: ${{ github.event.client_payload.slash_command.args.named.ref }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Upload files
        run: |
          aws s3 sync --delete ./build ${{ secrets.AWS_S3_BUCKET }}

      - name: Invalidate CloudFront cache
        shell: bash
        id: cache-invalidation
        run: |
          invalidation=$(aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*")
          invalidation_id=$(printf '%s' "$invalidation" | jq '.Invalidation.Id')
          echo "id=$invalidation_id" >> $GITHUB_OUTPUT

      - name: Wait until cache invalidation is finished
        shell: bash
        run: |
          aws cloudfront wait invalidation-completed \
            --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} \
            --id ${{ steps.cache-invalidation.outputs.id }}

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            Your deployment is available at: ${{ secrets.DEPLOYMENT_HOST }}
